#
# bgpcorsaro
#
# Alistair King, CAIDA, UC San Diego
# corsaro-info@caida.org
#
# Copyright (C) 2012 The Regents of the University of California.
#
# This file is part of bgpcorsaro.
#
# bgpcorsaro is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# bgpcorsaro is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with bgpcorsaro.  If not, see <http://www.gnu.org/licenses/>.
#

AC_INIT([bgpcorsaro], [1.0.0], [corsaro-info@caida.org])

# Corsaro versions...
# this may need some re-thinking
# currently increment:
# MAJOR: if the interfaces have been added, removed or changed
# MID:   if source code has been changed
# MINOR: if interfaces have been added
#
# there will need to be some thought put into the binary file versioning
# if the format changes
# perhaps use the major version to indicate changes in file format

BGPCORSARO_MAJOR_VERSION=1
BGPCORSARO_MID_VERSION=0
BGPCORSARO_MINOR_VERSION=0

AC_DEFINE_UNQUOTED([BGPCORSARO_MAJOR_VERSION],$BGPCORSARO_MAJOR_VERSION,
	[bgpcorsaro major version])
AC_DEFINE_UNQUOTED([BGPCORSARO_MID_VERSION],$BGPCORSARO_MID_VERSION,
	[bgpcorsaro mid version])
AC_DEFINE_UNQUOTED([BGPCORSARO_MINOR_VERSION],$BGPCORSARO_MINOR_VERSION,
	[bgpcorsaro minor version])

LT_INIT

AM_INIT_AUTOMAKE

AC_CONFIG_MACRO_DIR([m4])

AC_CONFIG_SRCDIR([lib/bgpcorsaro.c])
AC_CONFIG_HEADERS([config.h])
#AX_PREFIX_CONFIG_H([lib/bgpcorsaro_config.h])

# Checks for programs.
AC_PROG_LIBTOOL
AC_PROG_CC_C99

AC_SYS_LARGEFILE

AH_VERBATIM([_GNU_SOURCE],
[/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
#define _GNU_SOURCE
#endif])

AC_CHECK_PROG([bgpcorsaro_doxygen_avail], [doxygen], [yes], [no])

AC_MSG_CHECKING([whether to compile the docs])
AC_ARG_WITH([doxygen],
	[AS_HELP_STRING([--without-doxygen],
	  [do not compile the doxygen generated docs])],
	  [bgpcorsaro_doxygen=no],
	  [if test "x$bgpcorsaro_doxygen_avail" == xyes; then
	      bgpcorsaro_doxygen=yes
	  else
		bgpcorsaro_doxygen=no
	  fi
	  ])
AC_MSG_RESULT([$bgpcorsaro_doxygen])

AM_CONDITIONAL(HAS_DOXYGEN, [test x"$bgpcorsaro_doxygen" = xyes])

AC_CHECK_FUNCS([gettimeofday memset strdup strstr strsep strlcpy vasprintf])

# OSX Mavericks has replaced strlcpy with a macro that is not found by
# AC_CHECK_FUNCS
AC_CHECK_DECLS([strlcpy])

# should we dump debug output to stderr and not optmize the build?

AC_MSG_CHECKING([whether to build with debug information])
AC_ARG_ENABLE([debug],
    [AS_HELP_STRING([--enable-debug],
        [enable debug data generation (def=no)])],
    [debugit="$enableval"],
    [debugit=no])
AC_MSG_RESULT([$debugit])

if test x"$debugit" = x"yes"; then
    AC_DEFINE([DEBUG],[],[Debug Mode])
else
    AC_DEFINE([NDEBUG],[],[No-debug Mode])
fi

# Configure options for man pages
AC_ARG_WITH(man,
	    AS_HELP_STRING(--with-man,install man pages by default),[
	     if test "$withval" = yes
	     then
		     MANPAGES="docs/man/man3/[a-zA-Z]*.3"
	     else
		     MANPAGES=""
	     fi
])

# Checks for typedefs, structures, and compiler characteristics.
#AC_C_INLINE # 2014-04-14 AK removes because it causes problems with clang3.4
AC_TYPE_SIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT64_T
AC_TYPE_UINT8_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC


AX_LIB_SOCKET_NSL


# Checks for libraries.
AC_CHECK_LIB([bgpstream], [bgpstream_create], ,[AC_MSG_ERROR(
		      [libbgpstream required])])
AC_CHECK_LIB([bgpdump], [bgpdump_read_next], ,
	               [AC_MSG_ERROR( [libbgpdump required ])])
AC_SEARCH_LIBS([wandio_create], [wandio trace], ,[AC_MSG_ERROR(
		 [libwandio required (included with libtrace since 3.0.15)]
		 )])

# Checks for header files.
AC_CHECK_HEADERS([arpa/inet.h inttypes.h limits.h math.h stdlib.h string.h \
			      time.h sys/time.h])

# configure options for this monitor

# monitor name
AC_MSG_CHECKING([for the monitor name to use])
AC_ARG_WITH([monitorname],
	[AS_HELP_STRING([--with-monitorname=NAME],
	  [explicitly define the monitor name (defaults to system hostname)])],
	  [if test "x$withval" == xyes || test "x$withval" == ""; then
	  with_monitorname=`hostname`
	  else
	  with_monitorname=$withval
	  fi],
	  [with_monitorname=`hostname`])
AC_MSG_RESULT([$with_monitorname])

AC_DEFINE_UNQUOTED([BGPCORSARO_MONITOR_NAME],[$with_monitorname],[Monitor Name])

# are we going to dump some plugin timing information? (useful for debugging
# where bgpcorsaro spends its time given a complicated plugin chain)
AC_MSG_CHECKING([whether to monitor plugin runtimes])
AC_ARG_WITH([plugin-timing],
	[AS_HELP_STRING([--with-plugin-timing],
	  [time how long each plugin takes to process packets (defaults to no)])],
	  [],
	  [with_plugin_timing=no])

AS_IF([test "x$with_plugin_timing" != xno],
	[
	    AC_DEFINE_UNQUOTED([WITH_PLUGIN_TIMING],[1],
		[Monitor plugin timing])
	])

AC_MSG_RESULT([$with_plugin_timing])

# configure options to disable plugins
#AC_DEFINE([ED_PLUGIN_INIT_ALL_ENABLED],[],[Plugin init functions])

################################################################################
# Plugin Configuration Macros                                                  #
# ---------------------------                                                  #
#                                                                              #
# Each ED_WITH_PLUGIN macro defines a plugin which can be compiled into        #
# Bgpcorsaro.                                                                     #
#                                                                              #
# The order in which these plugins are listed is the _default_ order in which  #
# they will be run.                                                            #
################################################################################

## meta plugins. these do not write output, they add metadata to the packet
## seems that the most common use-case will be to run them first
ED_WITH_PLUGIN([bgpcorsaro_ipmeta],[ipmeta],[IPMETA],[no])

# filter plugins. these do not write output, they indicate which packets
# should [not] be written out
ED_WITH_PLUGIN([bgpcorsaro_filtergeo],[filtergeo],[FILTERGEO],[no])
ED_WITH_PLUGIN([bgpcorsaro_filterpfx],[filterpfx],[FILTERPFX],[no])

# default plugins
ED_WITH_PLUGIN([bgpcorsaro_dump],[dump],[DUMP],[yes])

# optional plugins
ED_WITH_PLUGIN([bgpcorsaro_bgpstats],[bgpstats],[BGPSTATS],[no])

# optional plugins
ED_WITH_PLUGIN([bgpcorsaro_tagstats],[tagstats],[TAGSTATS],[no])

# this MUST go after all the ED_WITH_PLUGIN macro calls
AC_DEFINE_UNQUOTED([ED_PLUGIN_INIT_ALL_ENABLED], $ED_PLUGIN_INIT_ALL_ENABLED,
		   [plugins to call the init macro for in bgpcorsaro_plugin.c])

#------------------------------------------------------------------------------#
# Extra tests or config needed for plugins should go below here                #
#------------------------------------------------------------------------------#

# the ipmeta plugin requires libipmeta
if test "x$with_plugin_ipmeta" == xyes; then
   AC_CHECK_LIB([ipmeta], [ipmeta_init], ,[
   	AC_MSG_ERROR([libipmeta is required by the bgpcorsaro_ipmeta plugin])
		      ])
fi

# the filtergeo plugin requires the ipmeta plugin
if test "x$with_plugin_filtergeo" == xyes &&
   test "x$with_plugin_ipmeta" != xyes; then
   AC_MSG_ERROR([bgpcorsaro_filtergeo plugin requires bgpcorsaro_ipmeta plugin])
fi

# unfortunately we have to generate all of these Makefiles because of make dist
# they will not however be compiled into the binary unless they are used

################################################################################
# END PLUGIN CONFIGURATION                                                     #
################################################################################

AC_HEADER_ASSERT

AC_SUBST([BGPCORSARO_MAJOR_VERSION])
AC_SUBST([BGPCORSARO_MID_VERSION])
AC_SUBST([BGPCORSARO_MINOR_VERSION])

AC_HEADER_ASSERT

AC_CONFIG_FILES([Makefile lib/Makefile lib/plugins/Makefile
			  tools/Makefile common/Makefile
			  common/libpatricia/Makefile
			  common/libcsv/Makefile])
AC_OUTPUT
